defaults: &defaults
   working_directory: ~/src
   docker:
     - image: vignesh123456/maven-docker
 
version: 2

jobs:

  build:
    <<: *defaults
    
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m   
#    branches:
#      ignore:
 #       - /branch1

    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: spring-framework-petclinic-{{ checksum "pom.xml" }}
            
      - run:
          name: Build & Testing
          command: |
            mvn package 
            cp /root/src/target/petclinic.war /var/lib/docker/
            
      - run:
          name: Install dependencies
          command: |
            yum install python -y
            curl -O https://bootstrap.pypa.io/get-pip.py
            python get-pip.py
            pip install awscli==1.11.76
            
      - run:
          name: Build application Docker image
          command: |
            docker build -t app . 
      
 #     - run: mvn install -DskipTests=true
      - save_cache:
          paths:
            - ~/.m2
          key: spring-framework-petclinic-{{ checksum "pom.xml" }}
          
      - store_artifacts:
          path: /root/src/target/petclinic.war
          
      - run:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              CLUSTER='test-app'
              FAMILY='test-app'
              DOCKER_IMAGE='test-app'
              TASK='test-app'
              SERVICE='app-service'
              # Login to AWS
              aws configure set region $AWS_REGION
              $curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
              unzip awscliv2.zip
              sudo ./aws/install
              $aws --version
              $aws ecr get-login-password --region your_region | docker login --username AWS --password-stdin  950778703950.dkr.ecr.us-east-1.amazonaws.com
              docker tag app $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:$CIRCLE_SHA1
              docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$DOCKER_IMAGE:$CIRCLE_SHA1
              # Create task for docker deploy
              task_template='[
                {
                  "name": "%s",
                  "image": "%s.dkr.ecr.%s.amazonaws.com/%s:%s",
                  "essential": true,
                  "cpu": 128,
                  "memoryReservation": 500,
                  "portMappings": [
                    {
                      "containerPort": 80,
                      "hostPort": 80
                    }
                  ],
                  "environment" : [
                      { "name" : "NODE_ENV", "value" : "production" }
                  ]
                }
              ]'
              echo "$task_template"
              task_def=$(printf "$task_template" $TASK $AWS_ACCOUNT_ID $AWS_REGION $TASK $CIRCLE_SHA1)
              # Register task definition
              json=$(aws ecs register-task-definition --container-definitions "$task_def" --family "$FAMILY")
              OLD_TASK_ID=$(aws ecs list-tasks --cluster "$CLUSTER" --desired-status RUNNING --family "$FAMILY" | egrep "task/" | sed -E "s/.*task\/(.*)\"/\1/")
              # Grab revision # using regular bash and grep
              revision=$(echo "$json" | grep -o '"revision": [0-9]*' | grep -Eo '[0-9]+')
              # Deploy revision 
              aws ecs stop-task --cluster "$CLUSTER" --task "${OLD_TASK_ID}"
              sleep 10
              aws ecs update-service --cluster "$CLUSTER" --service "$SERVICE" --task-definition "$TASK":"$revision"
             
              return 0
            fi
