#defaults: &defaults
#   working_directory: ~/src
#   docker:
#     - image: vignesh123456/maven-docker
 
version: 2

jobs:

  build:
#    <<: *defaults
    docker:
    - image: vignesh123456/maven-docker
    - image: seleniumx/standalone-chrome
      user: seluser
      name: sleniumx
    working_directory: ~/src
      environment:
      # Customize the JVM maximum heap limit
        MAVEN_OPTS: -Xmx3200m   
#    branches:
#      ignore:
 #       - /branch1

    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          key: spring-framework-petclinic-{{ checksum "pom.xml" }}
            
 #     - run:
 #         name: Build & Testing
 #         command: |
 #           mvn package 
            
            
#      - run:
#          name: Install dependencies
#          command: |
#            yum install python -y
#            curl -O https://bootstrap.pypa.io/get-pip.py
#            python get-pip.py
#            pip install awscli==1.11.76
  #    - checkout
      - run: mvn dependency:go-offline

      - run:
         name: Start selenium standalon server
         command: |
          java -version
          sudo java -Dwebdriver.chrome.driver="/opt/selenium/chromedriver-78.0.3904.70" -jar /opt/selenium/selenium-server-standalone.jar -port 5555 -log /opt/selenium/selenium.log
         background: true

      - save_cache:
         paths:
         - ~/.m2
         key: v2-dependencies-{{ checksum "pom.xml" }}

    # run unit tests!
     - run: mvn integration-test

     - store_artifacts:
         path: target/surefire-reports
         destination: tr1

     - store_test_results:
         path: target/surefire-reports

     - store_artifacts:
         path: /opt/selenium/selenium.log
         destination: selenium-server.log
    
      

     - save_cache:
         paths:
         - ~/.m2
         key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
     - run:
         name: Integration testing
         command: |
           mvn clean integration-test
      
     - run:
         name: Save test results
         command: |
           mkdir -p ~/testng/results/
           find . -type f -regex "./test-output/emailable-report.html" -exec cp {} ~/testng/results/ \;
         when: always
     - store_test_results:
         path: ~/testng/results/
     - store_artifacts:
         path: ~/testng/results/
     - store_artifacts:
         path:  testng/results/                             
   #   - run:
   #       name: Build application Docker image
   #       command: |
   #         docker build -t app . 
      
 #     - run: mvn install -DskipTests=true
   #   - save_cache:
   #       paths:
   #         - ~/.m2
   #       key: spring-framework-petclinic-{{ checksum "pom.xml" }}
          
      - store_artifacts:
          path: /root/src/target/petclinic.war
      
